<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.manitto.repositories.UserRepository">
    <insert id="registerUser" parameterType="userRegisterDto">
        insert into user (username, password, name, email)
        values (#{username}, #{password}, #{name}, #{email})
    </insert>
    <update id="updateUser" parameterType="userUpdateDto">
        update user
        set password         = #{password}
          , email            = #{email}
          , random_name      = #{randomName}
          , aware_role       = #{awareRole}
          , role             = #{role}
          , prev_contributor = #{prevContributor}
          , prev_receiver    = #{prevReceiver}
        where id = #{id}
    </update>
    <delete id="deleteUser" parameterType="long">
        delete
        from user
        where id = #{id};
    </delete>
    <select id="getUserByUsername" parameterType="string" resultType="userDto">
        select *
        from user
        where username = #{username}
    </select>
    <select id="getUserById" parameterType="long" resultType="userDto">
        select *
        from user
        where id = #{id}
    </select>
    <select id="getAllUserList" resultType="userDto">
        select *
        from user
    </select>
    <select id="getAllUserListLimit" parameterType="map" resultType="userDto">
        select *
        from user
        limit #{limit} offset #{offset}
    </select>
    <select id="getUserListWithoutPrevMatch" resultType="userDto">
        select *
        from user
        where prev_receiver = false
          and prev_contributor = false
    </select>
    <select id="isExistUsername" parameterType="string" resultType="boolean">
        select exists(select 1 from user where username = #{username})
    </select>
    <select id="isExistEmail" resultType="boolean">
        select exists(select 1 from user where email = #{email})
    </select>
    <select id="checkAwareRoleById" resultType="boolean">
        select aware_role
        from user
        where id = #{id}
    </select>
    <select id="getUserListByRole" parameterType="string" resultType="userDto">
        select *
        from user
        where role = #{role}
    </select>
    <select id="getUserListWithoutPrevContributor" resultType="userDto">
        select *
        from user
        where prev_receiver = false
    </select>
    <select id="getUserListWithoutPrevReceiver" resultType="userDto">
        select *
        from user
        where prev_contributor = false
    </select>
    <select id="getUserListHavaRole" resultType="userDto">
        select *
        from user
        where role != 'none'
    </select>
    <select id="getTotalUserCount" resultType="int">
        select count(*)
        from user;
    </select>
    <select id="getTotalUser" resultType="int" >
        select count(*) from user
    </select>
    <select id="getAllUserLimits" parameterType="int" resultType="userDto">
        select * from user order by binary(name) desc limit #{limit},5
    </select>
</mapper>
